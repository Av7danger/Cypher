#!/usr/bin/env python3
"""Malware analysis commands for the Cypher CLI."""
import os
import sys
import argparse
from src.tools.malware.hash_checker import MalwareHashChecker
from src.tools.malware.static_analyzer import StaticAnalyzer

def handle_malware_commands(args):
    """Route and handle malware analysis commands."""
    if not args.command:
        print("Error: You must specify a malware command. Use 'cypher malware --help' for more information.")
        sys.exit(1)
    
    if args.command == 'hashcheck':
        check_file_hash(args)
    elif args.command == 'analyze':
        analyze_file(args)
    else:
        print(f"Error: Unknown malware command '{args.command}'")
        sys.exit(1)

def check_file_hash(args):
    """Check a file's hash against malware databases."""
    try:
        checker = MalwareHashChecker(api_key=args.api_key)
        results = checker.check_file(args.file)
        print(checker.format_results(results))
    except Exception as e:
        print(f"Error checking file hash: {str(e)}")
        sys.exit(1)

def analyze_file(args):
    """Perform static analysis on a file."""
    try:
        analyzer = StaticAnalyzer()
        results = analyzer.analyze_file(args.file)
        print(analyzer.format_results(results))
    except Exception as e:
        print(f"Error analyzing file: {str(e)}")
        sys.exit(1)